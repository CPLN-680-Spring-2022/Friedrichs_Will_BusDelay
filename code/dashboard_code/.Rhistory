library(shiny); runApp('dashboard_code.R')
runApp('dashboard_code.R')
runApp('dashboard_code.R')
# This is a test of leaflet(), ignore the code below for the time being.
leaflet(options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lng = -122.330412, lat = 47.609056, zoom = 15)
# This is a test of leaflet(), ignore the code below for the time being.
leaflet(options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lng = -75.1635, lat = 39.9528, zoom = 13)
# This is a test of leaflet(), ignore the code below for the time being.
leaflet(options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lng = -75.1635, lat = 39.9528, zoom = 12)
# This is a test of leaflet(), ignore the code below for the time being.
leaflet(options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lng = -75.1635, lat = 39.9528, zoom = 8)
# This is a test of leaflet(), ignore the code below for the time being.
leaflet(options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lng = -75.1635, lat = 39.9528, zoom = 9)
# This is a test of leaflet(), ignore the code below for the time being.
leaflet(options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lng = -75.1635, lat = 39.9528, zoom = 10)
# This is a test of leaflet(), ignore the code below for the time being.
leaflet(options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lng = -75.1635, lat = 39.9528, zoom = 9)
# Before creating the leaflet, load in the shapefile of points from github
#   loading from github enables the running of this script without necessatating
#   the downloading of anything.
points = sf::st_read("https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route", quiet = TRUE)
points = sf::st_read('https://github.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/04efe566-df96-4c1a-8824-3f92a45d0d72202047-1-11av6im.3lj8.shp')
https://github.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/04efe566-df96-4c1a-8824-3f92a45d0d72202047-1-11av6im.3lj8.shp
https://github.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/04efe566-df96-4c1a-8824-3f92a45d0d72202047-1-11av6im.3lj8.shp
points = sf::st_read('https://github.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/04efe566-df96-4c1a-8824-3f92a45d0d72202047-1-11av6im.3lj8.shp')
points = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/04efe566-df96-4c1a-8824-3f92a45d0d72202047-1-11av6im.3lj8.shp')
points = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/04efe566-df96-4c1a-8824-3f92a45d0d72202047-1-11av6im.3lj8.shp')
libary(RCurl)
library(RCurl)
install.packages("RCurl")
x <- getURL("https://raw.github.com/aronlindberg/latent_growth_classes/master/LGC_data.csv")
movies <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/fandango/fandango_score_comparison.csv", header=TRUE)
points = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/04efe566-df96-4c1a-8824-3f92a45d0d72202047-1-11av6im.3lj8.dbf')
points = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/04efe566-df96-4c1a-8824-3f92a45d0d72202047-1-11av6im.3lj8.shp')
https://github.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/04efe566-df96-4c1a-8824-3f92a45d0d72202047-1-11av6im.3lj8.shp')
points = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/routestops.dbf')
points = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/routestops.shp')
points = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/routestops.shp')
points = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/routestops.shp')
points = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/routestops.dbf')
# Before creating the leaflet, load in the shapefile of points from github
#   loading from github enables the running of this script without necessatating
#   the downloading of anything.
library(RCurl)
asasa = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/routestops.shp')
asasa = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/routestops')
asasa = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/routestops.shp')
library(RCurl)
asasa = sf::st_read('https://raw.githubusercontent.com/CPLN-680-Spring-2022/Friedrichs_Will_BusDelay/main/raw_data/map_data/stops_by_route/routestops.dbf')
View(asasa)
